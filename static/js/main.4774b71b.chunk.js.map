{"version":3,"sources":["componenet/Page.js","componenet/WeatherApp.js","App.js","index.js"],"names":["Page","weatherData","icon","date","time","temp","weatherMood","city","country","Sunset","humidity","pressure","speed","className","id","onclick","WeatherApp","useState","setweatherData","inputdata","setinputdata","seticon","Date","toLocaleTimeString","settime","toLocaleDateString","setdate","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","dt","name","sys","sunset","d","hr","parseInt","getHours","mnt","getMinutes","console","log","useEffect","setInterval","t","placeholder","type","value","onChange","event","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4774b71b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/weathercss.css';\r\n\r\nconst Page = ({weatherData,icon,date,time}) => {\r\n\r\n    const {temp,weatherMood,city,country,Sunset,humidity,pressure,speed}=weatherData;\r\n   \r\n    return (\r\n        <>\r\n         \r\n        <div className=\"weather_info\">\r\n            <div className=\"w_condition\">\r\n                <div className=\"big_logo\"><i className={icon} id=\"big_icon\" ></i></div>\r\n            </div>\r\n            <div className=\"weather_data\">\r\n                <div className=\"temperature\">\r\n                    <div className=\"deg\">{temp}&deg;</div>\r\n                     <div className=\"cld\">{weatherMood} <br/>\r\n                        <span id=\"location\">{city},{country}</span>\r\n                     </div>\r\n                </div>\r\n            \r\n              \r\n                <div className=\"time\"> {date} <br />\r\n                {time}\r\n                </div>\r\n            </div>\r\n            <div className=\"four_cont\">\r\n                <div className=\"small_cont\">\r\n                    <div className=\"small_logo\"><i className=\"wi wi-sunset\"></i></div>\r\n                    <div className=\"small_data\">{Sunset}<br/> Sunset</div>\r\n                </div>\r\n                <div className=\"small_cont\">\r\n                    <div className=\"small_logo\"><i className=\"wi wi-humidity\"></i></div>\r\n                    <div className=\"small_data\">{humidity} <br/> Humidity</div>\r\n                </div>\r\n                <div className=\"small_cont\">\r\n                    <div className=\"small_logo\"><i className=\"wi wi-barometer\"></i></div>\r\n                    <div className=\"small_data\">{pressure} <br/> Pressure</div>\r\n                </div>\r\n            \r\n                <div className=\"small_cont\">\r\n                    <div className=\"small_logo\"><i className=\"wi wi-strong-wind\"></i></div>\r\n                    <div className=\"small_data\">{speed}<br/> speed</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n      <div className=\"creator\"> <center>Developed by: <span onclick=\"window.location.assign('https://www.instagram.com/swayam_0p/')\">@swayam_0p</span> <br/>React-js project: Weather-App</center> </div>\r\n      \r\n    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","import React,{useState,useEffect} from 'react'\r\nimport Page from './Page';\r\n\r\n\r\n\r\nconst WeatherApp = () => {\r\n  const [weatherData,setweatherData] = useState({});\r\n  const [inputdata,setinputdata]=useState(\"cuttack\");\r\n  const [icon,seticon]=useState('wi wi-cloudy');\r\n  const [time,settime]=useState(new Date().toLocaleTimeString());\r\n  const [date,setdate]=useState(new Date().toLocaleDateString());\r\n    const getWeatherInfo = async () =>{\r\n   \r\n  try {\r\n    let url=`https://api.openweathermap.org/data/2.5/weather?q=${inputdata}&units=metric&appid=95fe21cad56b9b4993c62f0f16cc53d7`;\r\n    const res=await fetch(url)\r\n    const data=await res.json();\r\n\r\n    const {temp,pressure,humidity}=data.main;\r\n    const {main:weatherMood}=data.weather[0];\r\n    const {speed}=data.wind;\r\n    //Time of searched city\r\n    \r\n    \r\n    const {dt}=data;\r\n    // var t=new Date(dt*1000);\r\n    // const time=t.toLocaleTimeString();\r\n    // const date=t.toLocaleDateString();\r\n    const {name:city}=data;\r\n    const {country}=data.sys;\r\n    // for sunset value\r\n    const {sunset}=data.sys;\r\n    var d=new Date(sunset*1000);\r\n    const hr=parseInt(d.getHours()%12);\r\n    const mnt=d.getMinutes();\r\n    const Sunset=`${hr}:${mnt} PM`;\r\n   \r\n    const w_data={temp,pressure,humidity,weatherMood,speed,Sunset,city,country};\r\n    setweatherData(w_data);\r\n    \r\n    //selecting icon for respective weather mood\r\n    switch(weatherMood){\r\n      case 'Clouds':seticon('wi wi-cloudy-windy');\r\n      break;\r\n      case 'Thunderstorm':seticon('wi wi-thunderstorm')\r\n      break;\r\n      case 'Drizzle':seticon('wi wi-sprinkle');\r\n      break;\r\n      case 'Haze':seticon('wi wi-fog');\r\n      break;\r\n      case 'Rain':seticon('wi wi-rain-wind');\r\n      break;\r\n      case 'Snow':seticon('wi wi-snow-wind');\r\n      break;\r\n      case 'Smoke':seticon('wi wi-smoke');\r\n      break;\r\n      case 'FOg':seticon('wi wi-smoge');\r\n      break;\r\n      default:\r\n       \r\n        if(new Date(dt*1000).getHours()>18 || new Date(dt*1000).getHours()<5)\r\n        {\r\n          \r\n          seticon('wi wi-night-clear')\r\n        }\r\n        else{\r\n          seticon('wi wi-day-sunny')\r\n        }\r\n        break;\r\n    }\r\n   \r\n    // console.log(weatherData);\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n  \r\n    }\r\n\r\n    function tim()\r\n    {\r\n      setInterval(() => {\r\n        var d=new Date().toLocaleDateString();\r\n        var t=new Date().toLocaleTimeString();\r\n        setdate(d);\r\n        settime(t);\r\n      }, 1000);\r\n    }\r\n\r\n     useEffect(() => {\r\n     \r\n      tim();\r\n     getWeatherInfo();\r\n    },[])// eslint-disable-next-line\r\n    return (\r\n        <>\r\n           <div className=\"weather\">\r\n        <div className=\"search_box\">\r\n            <div className=\"search_in\"><input placeholder=\"Search city...\" type=\"text\" value={inputdata} onChange={(event)=>setinputdata(event.target.value)}/></div>\r\n            <div className=\"search\" onClick={()=>getWeatherInfo()}>Search</div>\r\n        </div>\r\n            <Page weatherData={weatherData} icon={icon} time={time} date={date}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherApp;\r\n","import React from 'react'\r\nimport WeatherApp from './componenet/WeatherApp'\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <WeatherApp />\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}